generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id             Int      @id @default(autoincrement())
  name           String
  base           String
  principal      String
  engineProvider EngineProvider @relation(fields: [engineProviderId], references: [id])
  engineProviderId Int
  drivers        Driver[]
}

model EngineProvider {
  id   Int      @id @default(autoincrement())
  name String
  teams Team[]
}

model Driver {
  id              Int      @id @default(autoincrement())
  firstName       String
  lastName        String
  nationality     String
  dateOfBirth     DateTime
  points          Int
  championships   Int
  currentTeam     Team     @relation(fields: [teamId], references: [id])
  teamId          Int
  previousTeams   PreviousTeam[]
  raceResults     RaceResult[]
}

model PreviousTeam {
  id        Int      @id @default(autoincrement())
  driver    Driver   @relation(fields: [driverId], references: [id])
  driverId  Int
  teamName  String
  startYear Int
  endYear   Int
}

model Circuit {
  id       Int      @id @default(autoincrement())
  name     String
  location String
  races    Race[]
}

model Race {
  id            Int       @id @default(autoincrement())
  grandPrixName String
  circuit       Circuit    @relation(fields: [circuitId], references: [id])
  circuitId     Int
  date          DateTime
  raceResults   RaceResult[]
}

model RaceResult {
  id         Int      @id @default(autoincrement())
  driver     Driver   @relation(fields: [driverId], references: [id])
  driverId   Int
  race       Race     @relation(fields: [raceId], references: [id])
  raceId     Int
  position   Int
  points     Int
  gotFastestLap Boolean
}
